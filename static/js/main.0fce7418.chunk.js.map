{"version":3,"sources":["components/shop-header/index.js","components/shop-header/shop-header.js","components/book-list-item/index.js","components/book-list-item/book-list-item.js","components/bookstore-service-context/bookstore-service-context.js","components/hoc/with-bookstore-service.js","actions/index.js","utils/compose.js","components/spinner/index.js","components/spinner/spinner.js","components/error-indicator/index.js","components/error-indicator/error-indicator.js","components/book-list/book-list.js","components/book-list/index.js","components/shopping-cart-table/shopping-cart-table.js","components/pages/home-page.js","components/pages/cart-page.js","components/app/index.js","components/app/app.js","components/error-boundry/index.js","components/error-boundry/error-boundry.js","services/bookstore-service.js","reducers/book-list.js","reducers/shopping-cart.js","reducers/index.js","store.js","index.js"],"names":["ShopHeader","numItems","total","className","to","BookListItem","book","onAddedToCart","title","author","price","coverImage","src","alt","onClick","React","createContext","BookstoreServiceProvider","Provider","BookstoreServiceConsumer","Consumer","withBookstoreService","Wrapped","props","bookstoreService","bookAddedToCart","bookId","type","payload","fetchBooks","dispatch","getBooks","then","data","catch","err","compose","funcs","comp","reduceRight","wrapped","f","Spinner","ErrorIndicator","BookList","books","map","key","id","BookListContainer","this","loading","error","Component","connect","bookList","mapDispatchToProps","onIncrease","onDecrease","onDelete","shoppingCart","items","cartItems","orderTotal","item","idx","count","HomePage","CartPage","App","role","path","component","exact","ErrorBoundry","state","hasError","setState","children","BookstoreService","Promise","resolve","reject","setTimeout","Math","random","Error","updateBookList","action","undefined","updateCartItems","slice","updateOrder","quantity","find","itemIndex","findIndex","newItem","updateCartItem","updateShoppingCart","reducer","store","createStore","ReactDOM","render","value","document","getElementById"],"mappings":"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","file":"static/js/main.0fce7418.chunk.js","sourcesContent":["import ShopHeader from './shop-header';\n\nexport default ShopHeader;","import React from 'react';\nimport './shop-header.css';\nimport { Link } from 'react-router-dom';\n\nconst ShopHeader = ({ numItems, total }) => {\n  return (\n    <header className=\"shop-header row\">\n      <Link to=\"/\">\n        <div className=\"logo text-dark\">ReStore</div>\n      </Link>\n      <Link to=\"/cart\">\n        <div className=\"shopping-cart\">\n          <i className=\"cart-icon fa fa-shopping-cart\" />\n          {numItems} items (${total})\n        </div>\n      </Link>\n    </header>\n  );\n};\n\nexport default ShopHeader;\n","import BookListItem from './book-list-item';\n\nexport default BookListItem;\n","import React from 'react';\nimport './book-list-item.css';\n\nconst BookListItem = ({ book, onAddedToCart }) => {\n  const { title, author, price, coverImage } = book;\n  return (\n    <div className=\"book-list-item\">\n      <div className=\"book-cover\">\n        <img src={coverImage} alt=\"cover\" />\n      </div>\n      <div className=\"book-details\">\n        <span className=\"book-title\">{title}</span>\n        <div className=\"book-author\">{author}</div>\n        <div className=\"book-price\">${price}</div>\n        <button\n          onClick={onAddedToCart}\n          className=\"btn btn-info add-to-cart\">\n          Add to cart\n        </button>\n      </div>\n    </div>\n  );\n};\n\nexport default BookListItem;\n","import React from 'react';\n\nconst {\n  Provider: BookstoreServiceProvider,\n  Consumer: BookstoreServiceConsumer\n} = React.createContext();\n\nexport {\n  BookstoreServiceProvider,\n  BookstoreServiceConsumer\n};\n","import React from 'react';\nimport { BookstoreServiceConsumer } from '../bookstore-service-context';\n\nconst withBookstoreService = () => (Wrapped) => {\n\n  return (props) => {\n    return (\n      <BookstoreServiceConsumer>\n        {\n          (bookstoreService) => {\n            return (<Wrapped {...props}\n                     bookstoreService={bookstoreService}/>);\n          }\n        }\n      </BookstoreServiceConsumer>\n    );\n  }\n};\n\nexport default withBookstoreService;\n","\nconst booksRequested = () => {\n  return {\n    type: 'FETCH_BOOKS_REQUEST'\n  }\n};\n\nconst booksLoaded = (newBooks) => {\n  return {\n    type: 'FETCH_BOOKS_SUCCESS',\n    payload: newBooks\n  };\n};\n\nconst booksError = (error) => {\n  return {\n    type: 'FETCH_BOOKS_FAILURE',\n    payload: error\n  };\n};\n\nexport const bookAddedToCart = (bookId) => {\n  return {\n    type: 'BOOK_ADDED_TO_CART',\n    payload: bookId\n  };\n};\n\nexport const bookRemovedFromCart = (bookId) => {\n  return {\n    type: 'BOOK_REMOVED_FROM_CART',\n    payload: bookId\n  };\n};\n\nexport const allBooksRemovedFromCart = (bookId) => {\n  return {\n    type: 'ALL_BOOKS_REMOVED_FROM_CART',\n    payload: bookId\n  };\n};\n\nconst fetchBooks = (bookstoreService, dispatch) => () => {\n  dispatch(booksRequested());\n  bookstoreService.getBooks()\n    .then((data) => dispatch(booksLoaded(data)))\n    .catch((err) => dispatch(booksError(err)));\n};\n\nexport {\n  fetchBooks\n};\n","const compose = (...funcs) => (comp) => {\n  return funcs.reduceRight(\n    (wrapped, f) => f(wrapped), comp);\n};\n\nexport default compose;\n","import Spinner from './spinner';\n\nexport default Spinner;\n","import React from 'react';\nimport './spinner.css';\n\nconst Spinner = () => {\n  return <div>loading...</div>;\n};\n\nexport default Spinner;\n","import ErrorIndicator from './error-indicator';\n\nexport default ErrorIndicator;\n","import React from 'react';\nimport './error-indicator.css';\n\nconst ErrorIndicator = () => {\n  return <div>Error!</div>;\n};\n\nexport default ErrorIndicator;\n","import React, { Component } from 'react';\nimport BookListItem from '../book-list-item';\n\nimport { connect } from 'react-redux';\n\nimport { withBookstoreService } from '../hoc';\nimport { fetchBooks, bookAddedToCart } from '../../actions';\nimport { compose } from '../../utils';\n\nimport Spinner from '../spinner';\nimport ErrorIndicator from '../error-indicator';\n\nimport './book-list.css';\n\nconst BookList = ({ books, onAddedToCart }) => {\n  return (\n    <ul className=\"book-list\">\n      {\n        books.map((book) => {\n          return (\n            <li key={book.id}>\n              <BookListItem\n                book={book}\n                onAddedToCart={() => onAddedToCart(book.id)}/>\n            </li>\n          );\n        })\n      }\n    </ul>\n  );\n};\n\nclass BookListContainer extends Component {\n\n  componentDidMount() {\n    this.props.fetchBooks();\n  }\n\n  render() {\n    const { books, loading, error, onAddedToCart } = this.props;\n\n    if (loading) {\n      return <Spinner />;\n    }\n\n    if (error) {\n      return <ErrorIndicator />;\n    }\n\n    return <BookList books={books} onAddedToCart={onAddedToCart}/>;\n  }\n}\n\nconst mapStateToProps = ({ bookList: { books, loading, error }}) => {\n  return { books, loading, error };\n};\n\nconst mapDispatchToProps = (dispatch, { bookstoreService }) => {\n\n  return {\n    fetchBooks: fetchBooks(bookstoreService, dispatch),\n    onAddedToCart: (id) => dispatch(bookAddedToCart(id))\n  };\n};\n\nexport default compose(\n  withBookstoreService(),\n  connect(mapStateToProps, mapDispatchToProps)\n)(BookListContainer);\n","import BookList from './book-list';\n\nexport default BookList;\n","import React from 'react';\nimport { connect } from 'react-redux';\n\nimport {\n  bookAddedToCart,\n  bookRemovedFromCart,\n  allBooksRemovedFromCart } from '../../actions';\n\nimport './shopping-cart-table.css';\n\nconst ShoppingCartTable = ({ items, total, onIncrease, onDecrease, onDelete }) => {\n  const renderRow = (item, idx) => {\n    const { id, title, count, total } = item;\n    return (\n      <tr key={id}>\n        <td>{idx + 1}</td>\n        <td>{title}</td>\n        <td>{count}</td>\n        <td>${total}</td>\n        <td>\n          <button\n            onClick={() => onDelete(id)}\n            className=\"btn btn-outline-danger btn-sm float-right\">\n            <i className=\"fa fa-trash-o\" />\n          </button>\n          <button\n            onClick={() => onIncrease(id)}\n            className=\"btn btn-outline-success btn-sm float-right\">\n            <i className=\"fa fa-plus-circle\" />\n          </button>\n          <button\n            onClick={() => onDecrease(id)}\n            className=\"btn btn-outline-warning btn-sm float-right\">\n            <i className=\"fa fa-minus-circle\" />\n          </button>\n        </td>\n      </tr>\n    );\n  };\n\n  return (\n    <div className=\"shopping-cart-table\">\n      <h2>Your Order</h2>\n      <table className=\"table\">\n        <thead>\n          <tr>\n            <th>#</th>\n            <th>Item</th>\n            <th>Count</th>\n            <th>Price</th>\n            <th>Action</th>\n          </tr>\n        </thead>\n\n        <tbody>\n        { items.map(renderRow) }\n        </tbody>\n      </table>\n\n      <div className=\"total\">\n        Total: ${total}\n      </div>\n    </div>\n  );\n};\n\nconst mapStateToProps = ({ shoppingCart: { cartItems, orderTotal }}) => {\n  return {\n    items: cartItems,\n    total: orderTotal\n  };\n};\n\nconst mapDispatchToProps = {\n  onIncrease: bookAddedToCart,\n  onDecrease: bookRemovedFromCart,\n  onDelete: allBooksRemovedFromCart\n};\n\nexport default connect(mapStateToProps, mapDispatchToProps)(ShoppingCartTable);\n","import React from 'react';\nimport BookList from '../book-list';\nimport ShoppingCartTable from '../shopping-cart-table/shopping-cart-table';\n\nconst HomePage = () => {\n  return (\n    <div>\n      <BookList />\n      <ShoppingCartTable />\n    </div>\n  );\n};\n\nexport default HomePage;\n","import React from 'react';\n\nconst CartPage = () => {\n  return <div>Cart Page</div>\n};\n\nexport default CartPage;\n","import App from './app';\n\nexport default App;\n","import React from 'react';\nimport { Route, Switch } from 'react-router-dom';\nimport ShopHeader from '../shop-header';\nimport { HomePage, CartPage } from '../pages';\n\nimport './app.css';\n\nconst App = () => {\n  return (\n    <main role=\"main\" className=\"container\">\n      <ShopHeader numItems={5} total={210}/>\n      <Switch>\n        <Route\n          path=\"/\"\n          component={HomePage}\n          exact />\n\n        <Route\n          path=\"/cart\"\n          component={CartPage}\n          />\n      </Switch>\n    </main>\n  );\n};\n\nexport default App;\n","import ErrorBoundry from './error-boundry';\n\nexport default ErrorBoundry;\n","import React, { Component } from 'react';\nimport ErrorIndicator from '../error-indicator';\n\nexport default class ErrorBoundry extends Component {\n\n  state = {\n    hasError: false\n  };\n\n  componentDidCatch() {\n    this.setState({ hasError: true });\n  }\n\n  render() {\n    if (this.state.hasError) {\n      return <ErrorIndicator />;\n    }\n\n    return this.props.children;\n  }\n}","\nexport default class BookstoreService {\n\n  data = [\n    {\n      id: 1,\n      title: 'Production-Ready Microservices',\n      author: 'Susan J. Fowler',\n      price: 32,\n      coverImage: 'https://images-na.ssl-images-amazon.com/images/I/41yJ75gpV-L._SX381_BO1,204,203,200_.jpg'},\n    {\n      id: 2,\n      title: 'Release It!',\n      author: 'Michael T. Nygard',\n      price: 45,\n      coverImage: 'https://images-na.ssl-images-amazon.com/images/I/414CRjLjwgL._SX403_BO1,204,203,200_.jpg'}\n  ];\n\n  getBooks() {\n    return new Promise((resolve, reject) => {\n      setTimeout(() => {\n        if (Math.random() > 0.75) {\n          reject(new Error('Something bad happened'));\n        } else {\n          resolve(this.data);\n        }\n      }, 700);\n    });\n  }\n}","const updateBookList = (state, action) => {\n\n  if (state === undefined) {\n    return {\n      books: [],\n      loading: true,\n      error: null\n    };\n  }\n\n  switch (action.type) {\n    case 'FETCH_BOOKS_REQUEST':\n      return {\n        books: [],\n        loading: true,\n        error: null\n      };\n\n    case 'FETCH_BOOKS_SUCCESS':\n      return {\n        books: action.payload,\n        loading: false,\n        error: null\n      };\n\n    case 'FETCH_BOOKS_FAILURE':\n      return {\n        books: [],\n        loading: false,\n        error: action.payload\n      };\n\n    default:\n      return state.bookList;\n  }\n};\n\nexport default updateBookList;\n","const updateCartItems = (cartItems, item, idx) => {\n\n  if (item.count === 0) {\n    return [\n      ...cartItems.slice(0, idx),\n      ...cartItems.slice(idx + 1)\n    ];\n  }\n\n  if (idx === -1) {\n    return [\n      ...cartItems,\n      item\n    ];\n  }\n\n  return [\n    ...cartItems.slice(0, idx),\n    item,\n    ...cartItems.slice(idx + 1)\n  ];\n};\n\nconst updateCartItem = (book, item = {}, quantity) => {\n\n  const {\n    id = book.id,\n    count = 0,\n    title = book.title,\n    total = 0 } = item;\n\n  return {\n    id,\n    title,\n    count: count + quantity,\n    total: total + quantity*book.price\n  };\n};\n\nconst updateOrder = (state, bookId, quantity) => {\n  const { bookList: { books }, shoppingCart: { cartItems }} = state;\n\n  const book = books.find(({id}) => id === bookId);\n  const itemIndex = cartItems.findIndex(({id}) => id === bookId);\n  const item = cartItems[itemIndex];\n\n  const newItem = updateCartItem(book, item, quantity);\n  return {\n    orderTotal: 0,\n    cartItems: updateCartItems(cartItems, newItem, itemIndex)\n  };\n};\n\nconst updateShoppingCart = (state, action) => {\n\n  if (state === undefined) {\n    return {\n      cartItems: [],\n      orderTotal: 0\n    }\n  }\n\n  switch(action.type) {\n    case 'BOOK_ADDED_TO_CART':\n      return updateOrder(state, action.payload, 1);\n\n    case 'BOOK_REMOVED_FROM_CART':\n      return updateOrder(state, action.payload, -1);\n\n    case 'ALL_BOOKS_REMOVED_FROM_CART':\n      const item = state.shoppingCart.cartItems.find(({id}) => id === action.payload);\n      return updateOrder(state, action.payload, -item.count);\n\n    default:\n      return state.shoppingCart;\n  }\n};\n\nexport default updateShoppingCart;\n","import updateBookList from './book-list';\nimport updateShoppingCart from './shopping-cart';\n\nconst reducer = (state, action) => {\n  return {\n    bookList: updateBookList(state, action),\n    shoppingCart: updateShoppingCart(state, action)\n  };\n};\n\nexport default reducer;\n","import { createStore } from 'redux';\n\nimport reducer from './reducers';\n\nconst store = createStore(reducer);\n\nexport default store;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { BrowserRouter as Router } from 'react-router-dom';\n\nimport App from './components/app';\nimport ErrorBoundry from './components/error-boundry';\nimport BookstoreService from './services/bookstore-service';\nimport { BookstoreServiceProvider } from './components/bookstore-service-context';\n\nimport store from './store';\n\nconst bookstoreService = new BookstoreService();\n\nReactDOM.render(\n  <Provider store={store}>\n    <ErrorBoundry>\n      <BookstoreServiceProvider value={bookstoreService}>\n        <Router>\n          <App />\n        </Router>\n      </BookstoreServiceProvider>\n    </ErrorBoundry>\n  </Provider>,\n  document.getElementById('root')\n);"],"sourceRoot":""}